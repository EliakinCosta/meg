import QtQuick 2.7
import QtQuick.Controls 2.0
import QtQuick.Layouts 1.0
import QtQuick.Dialogs 1.2
import QtQuick.Layouts 1.1
import QtQuick.Controls.Material 2.0
import Components 1.0 as Components

Item {            
    property string searchText
    property string toolBarState: "normal"
    property var topLeft: {"action": function(){ return appWindow.eventNotified("openDrawer", {}); }, "icon": "bars"}
    property var topRightCenter: {
        if (toolBarState === "normal") {
            return {"action": function(){ return appWindow.eventNotified("changeToolBarState", {"state": "search"}); }, "icon": "search"}
        } else {
            return {"action": function(){ return appWindow.eventNotified("changeToolBarState", {"state": "normal"}); }, "icon": "close"}
        }
    }
    property var topRight: {"action": conferencesJsonListModel.load, "icon": "refresh"}
    property string toolBarText: "Conferences"
    property string pageName: "conferences.qml"

    Connections {
        target: appWindow
        onEventNotified: {
            if (eventName === "update<%= config[:pluginname].capitalize.pluralize %>Model"){
                <%= config[:pluginname].downcase.pluralize %>JsonListModel.load()
            }
        }
    }

    JSONListModel {
        id: <%= config[:pluginname].downcase %>JsonListModel
        source: internal.baseServer + "/<%= config[:pluginname].downcase.pluralize %>"
        onStateChanged: {
            if (state === "ready" && httpStatus == 200) {
               settings.<%= config[:pluginname].downcase.pluralize %>Model = json
            }
        }
    }

    Settings {
        id: settings
        property var <%= config[:pluginname].downcase.pluralize %>Model
    }

    BusyIndicator {
        width: parent.width * 0.20
        height: parent.width * 0.20
        anchors.centerIn: parent
        running: <%= config[:pluginname].downcase.pluralize %>JsonListModel.state === "loading"
    }    
    
    MyStackView {
        id: _stackView
        visible: <%= config[:pluginname].downcase.pluralize %>JsonListModel.state !== "loading"
        anchors.fill: parent
        model: settings.<%= config[:pluginname].downcase.pluralize %>Model
        itemHead: core.swipeViewPlugins()[index].itemHead
        itensPage: core.pluginsDir() + "/<%= config[:pluginname].downcase.pluralize %>/<%= config[:pluginname].downcase.pluralize %>-detail.qml"
        icon: core.swipeViewPlugins()[index].position
    }

    RoundButton {
        text: FontAwesome.icons["plus"]
        radius: 200; width: 50; height: width
        visible: _stackView.depth <= 1
        anchors {
                bottom: parent.bottom
                bottomMargin: 16
                right: parent.right
                rightMargin: 16
        }
        onClicked: {
            _stackView.push(_stackView.itensPage, {"stackView": _stackView, "state": "add", "model": ({}) })
        }
    }

    Component.onCompleted: {
        if (settings.<%= config[:pluginname].downcase.pluralize %>Model === undefined)
            <%= config[:pluginname].downcase.pluralize %>JsonListModel.load()
    }
}
